openapi: 3.0.1
info:
  title: Swagger for Utility Network
  description: "Open API Specification (OAS/Swagger) \n* **trace**, **updateIsConnected**\
    \ from the [ArcGIS Utility Network](https://developers.arcgis.com/rest/services-reference/utility-network-service.htm)\n\
    * **generateToken** from the [ArcGIS REST API](https://developers.arcgis.com/rest/)\n\
    \nTested on ArcGIS  Enterprise 10.8.1 using OpenAPI Specification (OAC) written in [SwaggerEditor](https://github.com/swagger-api/swagger-editor)\ 
    \ and [SwaggerHub](https://app.swaggerhub.com/) for C# and Typescript-Angular code generation. \n"
  contact:
    name: ""
    url: "https://sspinnovations.com/"
    email: "you@sspinnovations.com"
  version: "0.13"
servers:
- url: http://localhost/
paths:
  /{ServerWebAdaptor}/rest/services/{UtilityNetworkName}/UtilityNetworkServer/updateIsConnected:
    post:
      summary: updateIsConnected
      description: UtilityNetworkService
      parameters:
      - name: ServerWebAdaptor
        in: path
        required: true
        schema:
          type: string
      - name: UtilityNetworkName
        in: path
        required: true
        schema:
          type: string
      - name: f
        in: query
        required: true
        schema:
          type: string
          default: json
        example: f=json
      - name: token
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateIsConnectedResponse'
  /{ServerWebAdaptor}/rest/services/{UtilityNetworkName}/UtilityNetworkServer/trace:
    post:
      tags:
      - UtilityNetworkService
      summary: trace
      description: Trace
      operationId: trace
      parameters:
      - name: ServerWebAdaptor
        in: path
        required: true
        schema:
          type: string
      - name: UtilityNetworkName
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: query
        required: true
        schema:
          type: string
        example: Zo7BVjivecOe2IFj58REGkUcvD9RK1k1Qu8YOpRu_mkMtFA2vPSUiWk_aksOO1-WF_hxNaOOfAMWz00PvyLrgF10ghdv23tW9cr0VUBFjNrw8RnclzKuc5W2sXnu5ilS790spTGYGky4z19dCRcg-pA2oDQMndQ_IkCTE-fOsibd1kdoiK6deU8mZo14Z4A8DmRhI1vneraDt8m7HHbnwY2sfFs_p_DHOl7j521x3BjxTH303O-syc2aF1jm9aPXYtoLY3A5eTz1wVFQcGRMacLkPvHoRcfQLjq6FpRfAumIKVPumQJF_VLoKCAXvjzVbwpvGQADejej96vAmfanUQ..
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - f
              - traceConfiguration
              - traceLocations
              - traceType
              - resultTypes
              properties:
                f:
                  type: string
                  description: Optional parameter representing the output format of
                    the response (default is JSON).
                  example: json
                  default: json
                gdbVersion:
                  type: string
                  description: The name of the geodatabase version.
                  example: sde.DEFAULT
                  default: sde.DEFAULT
                sessionId:
                  type: string
                  description: Optional parameter representing the token (guid) used
                    to lock the version. If the calling client has previously started
                    a service session (editing) and holds an exclusive lock on the
                    specified version, the request will fail if the sessionId is not
                    provided. If the specified version is currently locked by any
                    other session, the request will fail if the sessionId is not provided
                    or does not match the sessionId which holds the exclusive lock.
                  example: "{F7C7C69D-5AE0-47ED-814B-13E1FEF03F17}"
                  default: ""
                moment:
                  type: string
                  description: Optional parameter representing the session moment
                    (the default is the version current moment). This should only
                    be specified by the client when they do not want to use the current
                    moment.
                  example: "1511904463011"
                traceType:
                  type: string
                  description: The trace type.
                  example: upstream
                  enum:
                  - upstream
                  - downstream
                  - connected
                  - subnetwork
                  - unknown
                  - loops
                  - shortestpath
                  - subnetworkcontroller
                traceLocations:
                  type: array
                  description: '***Curently a workaround until figure out how to gen**The
                    locations for starting and stopping points, as well as barriers.
                    Optional parameter for subnetwork trace type, required parameter
                    for all other trace types.'
                  example: [{"traceLocationType":"startingPoint","globalId":"{7C47EFCE-4794-4589-9951-F2DEAD1E8176}","percentAlong":0.67932399720238645}]
                traceConfiguration:
                  type: object
                  description: The locations for starting and stopping points, as
                    well as barriers. Optional parameter for subnetwork trace type,
                    required parameter for all other trace types.
                  example: |-
                    {
                       "includeContainers":true,
                       "includeContent":false,
                       "includeStructures":true,
                       "includeBarriers":true,
                       "validateConsistency":true,
                       "domainNetworkName":"ElectricDistribution",
                       "tierName":"Medium Voltage Radial",
                       "targetTierName":"Medium Voltage Radial",
                       "subnetworkName":"",
                       "diagramTemplateName":"",
                       "shortestPathNetworkAttributeName":"",
                       "filterBitsetNetworkAttributeName":"",
                       "traversabilityScope":"junctionsAndEdges",
                       "conditionBarriers":[
                          {
                             "name":"Operational Device Status",
                             "type":"networkAttribute",
                             "operator":"equal",
                             "value":1,
                             "combineUsingOr":false,
                             "isSpecificValue":true
                          }
                       ],
                       "functionBarriers":[

                       ],
                       "arcadeExpressionBarrier":"",
                       "filterBarriers":[

                       ],
                       "filterFunctionBarriers":[

                       ],
                       "filterScope":"junctionsAndEdges",
                       "functions":[

                       ],
                       "nearestNeighbor":{
                          "count":-1,
                          "costNetworkAttributeName":"",
                          "nearestCategories":[

                          ],
                          "nearestAssets":[

                          ]
                       },
                       "outputFilters":[

                       ],
                       "outputConditions":[

                       ],
                       "propagators":[

                       ]
                    }
                resultTypes: 
                  type: array
                  description: Optional parameter representing the types of results to return.
                  example: [{"type":"elements"}]

        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/traceResultsSet'
              example: |-
                {
                  "traceResults": {
                    "features": [
                      {
                        "networkSourceId": 9,
                        "globalId": "{C3D30825-900C-4F1F-9458-BB3483E8B6B5}",
                        "objectId": 2853,
                        "terminalId": 1,
                        "assetGroupCode": 1
                      },
                      {
                        "networkSourceId": 9,
                        "globalId": "{138E5504-F84A-4A33-898F-849C4536F386}",
                        "objectId": 2852,
                        "terminalId": 1,
                        "assetGroupCode": 1
                      },
                      {
                        "networkSourceId": 7,

                    ],
                    "diagramName": "<placeholder>"
                  },
                  "globalFunctionResults": [],
                  "isConsistent": false,
                  "kFeaturesForKNNFound": false,
                  "startingPointsIgnored": false,
                  "warnings": [],
                  "success": true,
                   "error":
                    {
                      "code":500,
                      "message":"Error in handling operation trace",
                      "details":[]}
                  },
                }
        404:
          description: Tracing endpoint not found {base}/UtilityNetworkServer/trace
          content: {}

  /{PortalWebAdaptor}/sharing/rest/generateToken:
    post:
      tags:
      - UtilityNetworkService
      summary: generateToken
      parameters:
      - name: PortalWebAdaptor
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - expiration
              - f
              - password
              - username
              properties:
                username:
                  type: string
                password:
                  type: string
                ip:
                  type: string
                referer:
                  type: string
                expiration:
                  type: number
                f:
                  type: string
                  example: json
                  default: json
        required: true
      responses:
        200:
          description: Status 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponse'
              example: '{"token":"zKIKn-gJ1T3Ho447TeYUfK6-XL4PWMDy-FEyy6QlHF2btB52kto9so81b5LUDNvD5dolh0jHF7HwyKliYFOtlyihM6u0JNqPCXcF6GeC60YnL_s0QukXMnK2OmXRWzBRQssbZnz4HiNIvOLeu9Ol5WpLCDPWKx7OGqsAw3cyjH812cNJd3TGzbaDmD_bamCQbAFsj1S5TDrvz7f8MrMDXFobw0MrcFhemzf_bhsFr3dT9kjnXszOv8lS0hX4WwXkDLr7dtmtM98ff66IWAQSgBvnnNr0mJKl26CYVOYVPkkO9qygOav8-PpY6By7i7_p-XXyWfDoUuLEpRcFu5PwZw..","expires":1530556578459,"ssl":false}'
components:
  schemas:
    conditionBarrier:
      required:
      - combineUsingOr
      - isTypeSpecificValue
      - networkAttributeName
      - operator
      - value
      type: object
      properties:
        networkAttributeName:
          type: string
          example: Operational Device Status
        operator:
          type: string
          example: equal
        value:
          type: number
          description: 0 = unknown, 1 = open, 2 = closed
        combineUsingOr:
          type: boolean
        isTypeSpecificValue:
          type: boolean
      example: {"networkAttributeName":"Device Status","operator":"equal","value":1,"combineUsingOr":false,"isTypeSpecificValue":true}
    tokenResponse:
      type: object
      properties:
        token:
          type: string
          description: The generated token.
        expires:
          type: number
          description: The expiration time of the token in milliseconds since Jan.
            1, 1970 (UTC).
        ssl:
          type: boolean
          description: True if the token must always pass over ssl.
        error:
          type: object
          properties:
            code:
              type: number
            message:
              type: string
            details:
              type: array
              items:
                type: string
      description: Token reesponse from Portal
      example: {"token":"zKIKn-gJ1T3Ho447TeYUfK6-XL4PWMDy-FEyy6QlHF2btB52kto9so81b5LUDNvD5dolh0jHF7HwyKliYFOtlyihM6u0JNqPCXcF6GeC60YnL_s0QukXMnK2OmXRWzBRQssbZnz4HiNIvOLeu9Ol5WpLCDPWKx7OGqsAw3cyjH812cNJd3TGzbaDmD_bamCQbAFsj1S5TDrvz7f8MrMDXFobw0MrcFhemzf_bhsFr3dT9kjnXszOv8lS0hX4WwXkDLr7dtmtM98ff66IWAQSgBvnnNr0mJKl26CYVOYVPkkO9qygOav8-PpY6By7i7_p-XXyWfDoUuLEpRcFu5PwZw..","expires":1530556578459,"ssl":false}
    functionBarrier:
      required:
      - functionType
      - networkAttributeName
      - operator
      - value
      type: object
      properties:
        functionType:
          type: string
          description: Choose from a number of different calculation functions.
          example: add
          enum:
          - add
          - subtract
          - average
          - count
          - min
          - max
        networkAttributeName:
          type: string
          description: Choose to filter by any network attribute defined in the system.
          example: Transformer Load
        operator:
          type: string
          description: Choose from a number of different operators
          enum:
          - equal
          - notEqual
          - greaterThan
          - lessThan
          - lessThanEqual
          - includesTheValues
          - doesNotIncludeTheValues
          - includesAny
          - doesNotIncludeAny
        value:
          type: string
          description: Specific value of the input attribute type that, if discovered,
            will cause the termination.(string (numeric)
          example: "0"
        useLocalValues:
          type: boolean
          description: Calculates values in each direction as opposed to an overall
            global value.
      description: Array of objects; optional parameter.
    feature:
      type: object
      properties:
        networkSourceId:
          type: string
          description: networkSourceId
        globalId:
          type: string
          description: guid
        objectId:
          type: number
          description: objectId
        terminalId:
          type: number
          description: terminalId
        networkAttributes:
          type: array
          items:
            type: number
        assetGroup:
          type: number
          description: assetGroup
        assetType:
          type: number
          description: assetType
    functions:
      type: array
      example: [{"functionType":"add","networkAttributeName":"Service Load","networkAttributeConditions":[{"networkAttributeName":"Service Load","operator":"greaterThan","value":0,"combineUsingOr":false,"isTypeSpecificValue":true}]}]
      items:
        required:
        - functionType
        - networkAttributeName
        type: object
        properties:
          functionType:
            type: string
            enum:
            - add
            - subtract
            - average
            - count
            - min
            - max
          networkAttributeName:
            type: string
          networkAttributeConditions:
            type: array
            items:
              type: object
              properties:
                networkAttributeName:
                  type: string
                operator:
                  type: string
                  enum:
                  - equal
                  - notEqual
                  - greaterThan
                  - greaterThanEqual
                  - lessThan
                  - lessThanEqual
                  - includesTheValues
                  - doesNotIncludeTheValues
                  - includesAny
                  - doesNotIncludeAny
                value:
                  type: string
                combineUsingOr:
                  type: boolean
                isTypeSpecificValue:
                  type: boolean
    outputFilter:
      required:
      - assetGroup
      - assetType
      - sourceId
      type: object
      properties:
        sourceId:
          type: number
          example: 8.0
        assetGroup:
          type: number
        assetType:
          type: number
          example: 0.0
    traceLocation:
      type: object
      properties:
        traceLocationType:
          type: string
          enum:
          - startingPoint
          - stoppingPoint
        globalId:
          type: string
        percentAlong:
          type: number
      example: {"traceLocationType":"startingPoint","globalId":"{AFC09CCA-4B14-44A7-BF45-42E120EF97ED}","percentAlong":0.44386166034321217}
    networkAttribute:
      type: object
      properties:
        networkAttribute:
          type: number
      example: |
        "networkAttribute1":"1"
    propagator:
      required:
      - functionType
      - networkAttributeName
      - operator
      - value
      type: object
      properties:
        networkAttributeName:
          type: string
        functionType:
          type: string
          enum:
          - bitwiseAnd
          - min
          - max
        operator:
          type: string
          enum:
          - equal
          - notEqual
          - bitwiseAnd
          - greater
          - greaterEqual
          - less
          - lessEqual
        value:
          type: string
          description: string (numeric)
      example: {"networkAttributeName":"NominalVoltage","propagatorFunctionType":"min","operator":"includesAny","value":2147483647,"propagatedAttributeName":""}
    traceConfiguration:
      required:
      - conditionBarriers
      - filterBarriers
      - filterFunctionBarriers
      - functionBarriers
      - functions
      - nearestNeighbor
      - outputConditions
      - outputFilters
      - propagators
      type: object
      properties:
        includeContainers:
          type: boolean
          description: Optional parameter representing whether or not to include containers
            in the trace result (default is false).
          example: false
          default: false
        includeContent:
          type: boolean
          description: Optional parameter representing whether or not to include content
            in the trace result (default is false).
          default: false
        includeStructures:
          type: boolean
          description: Optional parameter representing whether or not to include structures
            in the trace result (default is false).
          example: false
          default: false
        includeBarriers:
          type: boolean
          description: Optional parameter representing whether or not to include barrier
            features that stop a trace in the trace result (default is true).
          example: true
          default: true
        validateConsistency:
          type: boolean
          description: Optional parameter representing whether or not to validate
            the consistency of the trace results (default is false).
          example: false
          default: false
        includeIsolated:
          type: boolean
          description: Optional property specifying whether to include isolated features for an isolation trace (the default is false).
          example: false
          default: false
        ignoreBarriersAtStartingPoints:
          type: boolean
          description: Optional property specifying whether dynamic barriers in the trace configuration are ignored for starting points. This can be useful when performing an upstream protective device trace using the discovered protective devices (barriers) as starting points to find subsequent upstream protective devices (the default is false).
          example: false
          default: false
        includeUpToFirstSpatialContainer:
          type: boolean
          description: Optional property representing whether to limit the containers returned in the trace result. This property depends on the includeContainers property and no-ops if includeContainers is false. If includeContainers is true and this property is true, containment associations up to, and including the first spatial container will be returned; otherwise all containment associations will be returned (the default is false).
          example: false
          default: false
        domainNetworkName:
          type: string
          description: Specifies the name of the domain network where the trace is starting. This is required for subnetwork-based traces.
          example: ""
          default: ""
        tierName:
          type: string
          description: Optional parameter that specifies the name of the tier where
            the trace is starting.
          example: ""
          default: ""
        targetTierName:
          type: string
          description: Optional parameter representing the name of the tier where
            upstream or downstream trace ends.
          example: ""
          default: ""
        subnetworkName:
          type: string
          description: Optional parameter representing the name of the subnetwork
            that will be traced - the starting points of the trace will be the controllers
            of this subnetwork .
          example: ""
          default: ""
        diagramTemplateName:
          type: string
          description: Optional parameter representing the name of the diagram template.
          example: ""
          default: ""
        shortestPathNetworkAttributeName:
          type: string
          description: Required parameter for shortest path trace ; optional otherwise.
            It represents the network attribute name used for determining cost when
            calulating the shortest path.
          example: ""
          default: ""
        filterBitsetNetworkAttributeName:
          type: string
          description: Optional parameter. Used during loops trace to only return
            loops with the same bit set all around the loop. Used during upstream/downstream
            traces to ensure that trace results include any bit that is set in the
            starting points for the network attribute.
          example: ""
          default: ""
        traversabilityScope:
          type: string
          description: Optional parameters representing which network element types
            the condition, category, or function barriers apply to (default is junctionsAndEdges).
          example: junctionsAndEdges
          default: junctionsAndEdges
          enum:
          - junctions
          - edges
          - junctionsAndEdges
        filterScope:
          type: string
          example: junctionsAndEdges
          default: junctionsAndEdges
        conditionBarriers:
          type: array
          description: Optional parameter containing an array of objects (representing
            network attribute conditions) that serve as barriers - default is null.
            If isTypeSpecificValue is true, the network attribute is being compared
            with a specific value ; otherwise the network attribute is being compared
            with another network attribute.
          items:
            $ref: '#/components/schemas/conditionBarrier'
        functionBarriers:
          type: array
          description: optional parameter.
          items:
            $ref: '#/components/schemas/functionBarrier'
        categoryBarriers:
          type: array
          description: 'The categories that serve as barriers (default is none) :
            optional parameter.'
          items:
            type: string
        filterBarriers:
          type: array
          description: 'A second pass is done over the trace results and all results
            after these categories are encountered are filtered (default is none)
            : optional parameter.'
          items:
            type: string
            example: [ "Protective", "Transformer"]
        filterFunctionBarriers:
          type: array
          items:
            type: string
        functions:
          type: object
          properties: {}
          description: Optional parameter ; an array of objects representing functions.
            Each function may have an optional array of network attribute conditions.
        nearestNeighbor:
          $ref: '#/components/schemas/nearestNeighborParam'
        outputFilterCategories:
          type: object
          properties: {}
          description: Optional property. This is an array of objects representing categories associated with the output filter (the default is none).
        outputFilters:
          type: array
          description: Optional property representing the output filter; an array of objects (default is null).
          items:
            $ref: '#/components/schemas/outputFilter'
        outputConditions:
          type: array
          description: Optional property specifying the type of features returned based on a network attribute or category.
          items:
            $ref: '#/components/schemas/traceOutputCondition'
        arcadeExpressionBarrier:
          type: string
          example: ""
          default: ""
        propagators:
          type: array
          items:
            $ref: '#/components/schemas/propagator'
      example: |-
        {
           "includeContainers":true,
           "includeContent":false,
           "includeStructures":true,
           "includeBarriers":false,
           "validateConsistency":false,
           "domainNetworkName":"ElectricDistribution",
           "tierName":"Medium Voltage Radial",
           "targetTierName":"Medium Voltage Radial",
           "subnetworkName":"",
           "diagramTemplateName":"",
           "shortestPathNetworkAttributeName":"",
           "filterBitsetNetworkAttributeName":"",
           "traversabilityScope":"junctionsAndEdges",
           "conditionBarriers":[
              {
                 "networkAttributeName":"Device Status",
                 "operator":"equal",
                 "value":1,
                 "combineUsingOr":false,
                 "isTypeSpecificValue":true
              }
           ],
           "categoryBarriers":[

           ],
           "functionBarriers":[

           ],
           "arcadeExpressionBarrier":"",
           "filterCategories":[

           ],
           "functions":[

           ],
           "nearestNeighbor":{
              "count":-1,
              "costNetworkAttributeName":"",
              "nearestCategories":[

              ],
              "nearestAssets":[

              ]
           },
           "outputFilterCategories":[

           ],
           "outputFilters":[

           ],
           "outputNetworkAttributeConditions":[

           ],
           "propagators":[
              {
                 "networkAttributeName":"NominalVoltage",
                 "propagatorFunctionType":"min",
                 "operator":"includesAny",
                 "value":2147483647,
                 "propagatedAttributeName":""
              }
           ],
           "stoppingCategories":[

           ]
        }
    traceOutputCondition:
      required:
      - isSpecificValue
      - name
      - operator
      - type
      type: object
      properties:
        name:
          type: string
          example: Phases Current
        type:
          type: string
          example: networkAttribute
          enum:
          - networkAttribute
          - category
        operator:
          type: string
          example: equal
        value:
          type: number
          example: 4.0
        combineUsingOr:
          type: boolean
          example: false
        isSpecificValue:
          type: boolean
          example: true
    traceResultsSet:
      type: object
      properties:
        traceResults:
          type: object
          properties:
            elements:
              type: array
              items:
                type: object
                properties:
                  networkSourceId:
                    type: number
                  globalId:
                    type: string
                  objectId:
                    type: number
                  terminalId:
                    type: number
                  assetGroupCode:
                    type: number
                  assetTypeCode:
                    type: number
            diagramName:
              type: string
            globalFunctionResults:
              type: array
              items:
                type: string
            kFeaturesForKNNFound:
              type: boolean
            startingPointsIgnored:
              type: boolean
            warnings:
              type: array
              items:
                type: string
        success:
          type: boolean
        error:
          type: object
          properties:
            code:
              type: number
            message:
              type: string
            details:
              type: array
              items:
                type: string
      description: Model for TraceResults
      example: "{\"traceResults\":{\"elements\":[{\"networkSourceId\":6,\"globalId\"\
        :\"{FB79C6C2-CC3D-40FB-82CA-A7E0C7A1FB40}\",\"objectId\":1122,\"terminalId\"\
        :1,\"assetGroupCode\":5,\"assetTypeCode\":172},{\"networkSourceId\":7,\"globalId\"\
        :\"{4C67A8EE-EA11-40C3-B3AA-17450E4200BB}\",\"objectId\":3004,\"terminalId\"\
        :-1,\"assetGroupCode\":3,\"assetTypeCode\":165},{\"networkSourceId\":7,\"\
        globalId\":\"{12EA87AF-C485-43B2-A932-2A9D860368B8}\",\"objectId\":3396,\"\
        terminalId\":-1,\"assetGroupCode\":3,\"assetTypeCode\":164},{\"networkSourceId\"\
        :7,\"globalId\":\"{1F570054-FE52-4225-B01B-10ACD86631FA}\",\"objectId\":3397,\"\
        terminalId\":-1,\"assetGroupCode\":3,\"assetTypeCode\":164},{\"networkSourceId\"\
        :7,\"globalId\":\"{7C47EFCE-4794-4589-9951-F2DEAD1E8176}\",\"objectId\":4008,\"\
        terminalId\":-1,\"assetGroupCode\":5,\"assetTypeCode\":165},{\"networkSourceId\"\
        :7,\"globalId\":\"{B08E3D30-D1FD-4336-AF6A-DB2ABEE000A1}\",\"objectId\":3219,\"\
        terminalId\":-1,\"assetGroupCode\":3,\"assetTypeCode\":164},{\"networkSourceId\"\
        :7,\"globalId\":\"{D3577A92-3816-4440-882C-77A968FED57C}\",\"objectId\":3095,\"\
        terminalId\":-1,\"assetGroupCode\":3,\"assetTypeCode\":164}],\"diagramName\"\
        :\"\\u003cplaceholder\\u003e\",\"globalFunctionResults\":[],\"kFeaturesForKNNFound\"\
        :false,\"startingPointsIgnored\":false,\"warnings\":[]},\"success\":true,\
        \ \"error\":{\"code\":400,\"message\":\"Unable to generate token.\",\"details\"\
        :[\"Invalid username or password.\"]}\r\n  }"
    tokenRequest:
      required:
      - expiration
      - f
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        ip:
          type: string
        referer:
          type: string
        expiration:
          type: number
        f:
          type: string
          example: json
          default: json
    nearestNeighborParam:
      required:
      - nearestAssets
      - nearestCategories
      type: object
      properties:
        count:
          type: integer
        costNetworkAttributeName:
          type: string
          default: ""
        nearestCategories:
          type: array
          items:
            type: string
        nearestAssets:
          type: array
          items:
            type: string
      example: {"count":-1,"costNetworkAttributeName":"","nearestCategories":[],"nearestAssets":[]}
    traceLocations:
      type: array
      items:
        $ref: '#/components/schemas/traceLocation'
    updateIsConnectedResponse:
      type: object
      properties:
        moment:
          type: number
        success:
          type: string
        error:
          type: object
          properties:
            code:
              type: number
            message:
              type: string
            details:
              type: array
              items:
                type: string
