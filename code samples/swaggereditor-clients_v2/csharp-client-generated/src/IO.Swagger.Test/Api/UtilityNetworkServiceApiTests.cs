/* 
 * Swagger for Utility Network
 *
 * Open API Specification (OAS/Swagger)  * **trace**, **updateIsConnected** from the [ArcGIS Utility Network](https://developers.arcgis.com/rest/services-reference/utility-network-service.htm) * **generateToken** from the [ArcGIS REST API](https://developers.arcgis.com/rest/)  Tested on ArcGIS  Enterprise 10.8.1 using OpenAPI Specification (OAC) written in [SwaggerEditor](https://github.com/swagger-api/swagger-editor)   and [SwaggerHub](https://app.swaggerhub.com/) for C# and Typescript-Angular code generation.  
 *
 * OpenAPI spec version: 3.0
 * Contact: kim.sundeen@sspinnovations.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing UtilityNetworkServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UtilityNetworkServiceApiTests
    {
        private UtilityNetworkServiceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UtilityNetworkServiceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UtilityNetworkServiceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UtilityNetworkServiceApi
            //Assert.IsInstanceOfType(typeof(UtilityNetworkServiceApi), instance, "instance is a UtilityNetworkServiceApi");
        }

        /// <summary>
        /// Test PortalWebAdaptorSharingRestGenerateTokenPost
        /// </summary>
        [Test]
        public void PortalWebAdaptorSharingRestGenerateTokenPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Body2 body = null;
            //string portalWebAdaptor = null;
            //var response = instance.PortalWebAdaptorSharingRestGenerateTokenPost(body, portalWebAdaptor);
            //Assert.IsInstanceOf<TokenResponse> (response, "response is TokenResponse");
        }
        /// <summary>
        /// Test Trace
        /// </summary>
        [Test]
        public void TraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Body1 body = null;
            //string token = null;
            //string serverWebAdaptor = null;
            //string utilityNetworkName = null;
            //var response = instance.Trace(body, token, serverWebAdaptor, utilityNetworkName);
            //Assert.IsInstanceOf<TraceResultsSet> (response, "response is TraceResultsSet");
        }
    }

}
