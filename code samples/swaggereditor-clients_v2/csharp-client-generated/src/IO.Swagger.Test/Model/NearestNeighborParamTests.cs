/* 
 * Swagger for Utility Network
 *
 * Open API Specification (OAS/Swagger)  * **trace**, **updateIsConnected** from the [ArcGIS Utility Network](https://developers.arcgis.com/rest/services-reference/utility-network-service.htm) * **generateToken** from the [ArcGIS REST API](https://developers.arcgis.com/rest/)  Tested on ArcGIS  Enterprise 10.8.1 using OpenAPI Specification (OAC) written in [SwaggerEditor](https://github.com/swagger-api/swagger-editor)   and [SwaggerHub](https://app.swaggerhub.com/) for C# and Typescript-Angular code generation.  
 *
 * OpenAPI spec version: 3.0
 * Contact: kim.sundeen@sspinnovations.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing NearestNeighborParam
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class NearestNeighborParamTests
    {
        // TODO uncomment below to declare an instance variable for NearestNeighborParam
        //private NearestNeighborParam instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of NearestNeighborParam
            //instance = new NearestNeighborParam();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NearestNeighborParam
        /// </summary>
        [Test]
        public void NearestNeighborParamInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" NearestNeighborParam
            //Assert.IsInstanceOfType<NearestNeighborParam> (instance, "variable 'instance' is a NearestNeighborParam");
        }


        /// <summary>
        /// Test the property 'Count'
        /// </summary>
        [Test]
        public void CountTest()
        {
            // TODO unit test for the property 'Count'
        }
        /// <summary>
        /// Test the property 'CostNetworkAttributeName'
        /// </summary>
        [Test]
        public void CostNetworkAttributeNameTest()
        {
            // TODO unit test for the property 'CostNetworkAttributeName'
        }
        /// <summary>
        /// Test the property 'NearestCategories'
        /// </summary>
        [Test]
        public void NearestCategoriesTest()
        {
            // TODO unit test for the property 'NearestCategories'
        }
        /// <summary>
        /// Test the property 'NearestAssets'
        /// </summary>
        [Test]
        public void NearestAssetsTest()
        {
            // TODO unit test for the property 'NearestAssets'
        }

    }

}
