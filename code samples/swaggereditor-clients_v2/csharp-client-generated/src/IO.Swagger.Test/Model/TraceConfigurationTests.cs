/* 
 * Swagger for Utility Network
 *
 * Open API Specification (OAS/Swagger)  * **trace**, **updateIsConnected** from the [ArcGIS Utility Network](https://developers.arcgis.com/rest/services-reference/utility-network-service.htm) * **generateToken** from the [ArcGIS REST API](https://developers.arcgis.com/rest/)  Tested on ArcGIS  Enterprise 10.8.1 using OpenAPI Specification (OAC) written in [SwaggerEditor](https://github.com/swagger-api/swagger-editor)   and [SwaggerHub](https://app.swaggerhub.com/) for C# and Typescript-Angular code generation.  
 *
 * OpenAPI spec version: 3.0
 * Contact: kim.sundeen@sspinnovations.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TraceConfiguration
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class TraceConfigurationTests
    {
        // TODO uncomment below to declare an instance variable for TraceConfiguration
        //private TraceConfiguration instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TraceConfiguration
            //instance = new TraceConfiguration();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TraceConfiguration
        /// </summary>
        [Test]
        public void TraceConfigurationInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TraceConfiguration
            //Assert.IsInstanceOfType<TraceConfiguration> (instance, "variable 'instance' is a TraceConfiguration");
        }


        /// <summary>
        /// Test the property 'IncludeContainers'
        /// </summary>
        [Test]
        public void IncludeContainersTest()
        {
            // TODO unit test for the property 'IncludeContainers'
        }
        /// <summary>
        /// Test the property 'IncludeContent'
        /// </summary>
        [Test]
        public void IncludeContentTest()
        {
            // TODO unit test for the property 'IncludeContent'
        }
        /// <summary>
        /// Test the property 'IncludeStructures'
        /// </summary>
        [Test]
        public void IncludeStructuresTest()
        {
            // TODO unit test for the property 'IncludeStructures'
        }
        /// <summary>
        /// Test the property 'IncludeBarriers'
        /// </summary>
        [Test]
        public void IncludeBarriersTest()
        {
            // TODO unit test for the property 'IncludeBarriers'
        }
        /// <summary>
        /// Test the property 'ValidateConsistency'
        /// </summary>
        [Test]
        public void ValidateConsistencyTest()
        {
            // TODO unit test for the property 'ValidateConsistency'
        }
        /// <summary>
        /// Test the property 'IncludeIsolated'
        /// </summary>
        [Test]
        public void IncludeIsolatedTest()
        {
            // TODO unit test for the property 'IncludeIsolated'
        }
        /// <summary>
        /// Test the property 'IgnoreBarriersAtStartingPoints'
        /// </summary>
        [Test]
        public void IgnoreBarriersAtStartingPointsTest()
        {
            // TODO unit test for the property 'IgnoreBarriersAtStartingPoints'
        }
        /// <summary>
        /// Test the property 'IncludeUpToFirstSpatialContainer'
        /// </summary>
        [Test]
        public void IncludeUpToFirstSpatialContainerTest()
        {
            // TODO unit test for the property 'IncludeUpToFirstSpatialContainer'
        }
        /// <summary>
        /// Test the property 'DomainNetworkName'
        /// </summary>
        [Test]
        public void DomainNetworkNameTest()
        {
            // TODO unit test for the property 'DomainNetworkName'
        }
        /// <summary>
        /// Test the property 'TierName'
        /// </summary>
        [Test]
        public void TierNameTest()
        {
            // TODO unit test for the property 'TierName'
        }
        /// <summary>
        /// Test the property 'TargetTierName'
        /// </summary>
        [Test]
        public void TargetTierNameTest()
        {
            // TODO unit test for the property 'TargetTierName'
        }
        /// <summary>
        /// Test the property 'SubnetworkName'
        /// </summary>
        [Test]
        public void SubnetworkNameTest()
        {
            // TODO unit test for the property 'SubnetworkName'
        }
        /// <summary>
        /// Test the property 'DiagramTemplateName'
        /// </summary>
        [Test]
        public void DiagramTemplateNameTest()
        {
            // TODO unit test for the property 'DiagramTemplateName'
        }
        /// <summary>
        /// Test the property 'ShortestPathNetworkAttributeName'
        /// </summary>
        [Test]
        public void ShortestPathNetworkAttributeNameTest()
        {
            // TODO unit test for the property 'ShortestPathNetworkAttributeName'
        }
        /// <summary>
        /// Test the property 'FilterBitsetNetworkAttributeName'
        /// </summary>
        [Test]
        public void FilterBitsetNetworkAttributeNameTest()
        {
            // TODO unit test for the property 'FilterBitsetNetworkAttributeName'
        }
        /// <summary>
        /// Test the property 'TraversabilityScope'
        /// </summary>
        [Test]
        public void TraversabilityScopeTest()
        {
            // TODO unit test for the property 'TraversabilityScope'
        }
        /// <summary>
        /// Test the property 'FilterScope'
        /// </summary>
        [Test]
        public void FilterScopeTest()
        {
            // TODO unit test for the property 'FilterScope'
        }
        /// <summary>
        /// Test the property 'ConditionBarriers'
        /// </summary>
        [Test]
        public void ConditionBarriersTest()
        {
            // TODO unit test for the property 'ConditionBarriers'
        }
        /// <summary>
        /// Test the property 'FunctionBarriers'
        /// </summary>
        [Test]
        public void FunctionBarriersTest()
        {
            // TODO unit test for the property 'FunctionBarriers'
        }
        /// <summary>
        /// Test the property 'CategoryBarriers'
        /// </summary>
        [Test]
        public void CategoryBarriersTest()
        {
            // TODO unit test for the property 'CategoryBarriers'
        }
        /// <summary>
        /// Test the property 'FilterBarriers'
        /// </summary>
        [Test]
        public void FilterBarriersTest()
        {
            // TODO unit test for the property 'FilterBarriers'
        }
        /// <summary>
        /// Test the property 'FilterFunctionBarriers'
        /// </summary>
        [Test]
        public void FilterFunctionBarriersTest()
        {
            // TODO unit test for the property 'FilterFunctionBarriers'
        }
        /// <summary>
        /// Test the property 'Functions'
        /// </summary>
        [Test]
        public void FunctionsTest()
        {
            // TODO unit test for the property 'Functions'
        }
        /// <summary>
        /// Test the property 'NearestNeighbor'
        /// </summary>
        [Test]
        public void NearestNeighborTest()
        {
            // TODO unit test for the property 'NearestNeighbor'
        }
        /// <summary>
        /// Test the property 'OutputFilterCategories'
        /// </summary>
        [Test]
        public void OutputFilterCategoriesTest()
        {
            // TODO unit test for the property 'OutputFilterCategories'
        }
        /// <summary>
        /// Test the property 'OutputFilters'
        /// </summary>
        [Test]
        public void OutputFiltersTest()
        {
            // TODO unit test for the property 'OutputFilters'
        }
        /// <summary>
        /// Test the property 'OutputConditions'
        /// </summary>
        [Test]
        public void OutputConditionsTest()
        {
            // TODO unit test for the property 'OutputConditions'
        }
        /// <summary>
        /// Test the property 'ArcadeExpressionBarrier'
        /// </summary>
        [Test]
        public void ArcadeExpressionBarrierTest()
        {
            // TODO unit test for the property 'ArcadeExpressionBarrier'
        }
        /// <summary>
        /// Test the property 'Propagators'
        /// </summary>
        [Test]
        public void PropagatorsTest()
        {
            // TODO unit test for the property 'Propagators'
        }

    }

}
