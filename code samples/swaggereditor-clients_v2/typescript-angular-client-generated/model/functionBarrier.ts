/**
 * Swagger for Utility Network
 * Open API Specification (OAS/Swagger)  * **trace**, **updateIsConnected** from the [ArcGIS Utility Network](https://developers.arcgis.com/rest/services-reference/utility-network-service.htm) * **generateToken** from the [ArcGIS REST API](https://developers.arcgis.com/rest/)  Tested on ArcGIS  Enterprise 10.8.1 using OpenAPI Specification (OAC) written in [SwaggerEditor](https://github.com/swagger-api/swagger-editor)   and [SwaggerHub](https://app.swaggerhub.com/) for C# and Typescript-Angular code generation.  
 *
 * OpenAPI spec version: 3.0
 * Contact: kim.sundeen@sspinnovations.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Array of objects; optional parameter.
 */
export interface FunctionBarrier { 
    /**
     * Choose from a number of different calculation functions.
     */
    functionType: FunctionBarrier.FunctionTypeEnum;
    /**
     * Choose to filter by any network attribute defined in the system.
     */
    networkAttributeName: string;
    /**
     * Choose from a number of different operators
     */
    operator: FunctionBarrier.OperatorEnum;
    /**
     * Specific value of the input attribute type that, if discovered, will cause the termination.(string (numeric)
     */
    value: string;
    /**
     * Calculates values in each direction as opposed to an overall global value.
     */
    useLocalValues?: boolean;
}
export namespace FunctionBarrier {
    export type FunctionTypeEnum = 'add' | 'subtract' | 'average' | 'count' | 'min' | 'max';
    export const FunctionTypeEnum = {
        Add: 'add' as FunctionTypeEnum,
        Subtract: 'subtract' as FunctionTypeEnum,
        Average: 'average' as FunctionTypeEnum,
        Count: 'count' as FunctionTypeEnum,
        Min: 'min' as FunctionTypeEnum,
        Max: 'max' as FunctionTypeEnum
    };
    export type OperatorEnum = 'equal' | 'notEqual' | 'greaterThan' | 'lessThan' | 'lessThanEqual' | 'includesTheValues' | 'doesNotIncludeTheValues' | 'includesAny' | 'doesNotIncludeAny';
    export const OperatorEnum = {
        Equal: 'equal' as OperatorEnum,
        NotEqual: 'notEqual' as OperatorEnum,
        GreaterThan: 'greaterThan' as OperatorEnum,
        LessThan: 'lessThan' as OperatorEnum,
        LessThanEqual: 'lessThanEqual' as OperatorEnum,
        IncludesTheValues: 'includesTheValues' as OperatorEnum,
        DoesNotIncludeTheValues: 'doesNotIncludeTheValues' as OperatorEnum,
        IncludesAny: 'includesAny' as OperatorEnum,
        DoesNotIncludeAny: 'doesNotIncludeAny' as OperatorEnum
    };
}