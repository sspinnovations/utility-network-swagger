/**
 * Swagger for Utility Network
 * Open API Specification (OAS/Swagger)  * **trace**, **updateIsConnected** from the [ArcGIS Utility Network]( https://developers.arcgis.com/rest/services-reference/utility-network-service.htm) * **generateToken** from the [ArcGIS REST API](https://developers.arcgis.com/rest/)  Tested on ArcGIS  Enterprise 10.6.1 using [NSwagStudio](https://github.com/RSuter/NSwag/wiki/NSwagStudio) C# code gen . 
 *
 * OpenAPI spec version: 0.13
 * Contact: 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Propagator.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Propagator_H_
#define IO_SWAGGER_CLIENT_MODEL_Propagator_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Propagator
    : public ModelBase
{
public:
    Propagator();
    virtual ~Propagator();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Propagator members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNetworkAttributeName() const;
        void setNetworkAttributeName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFunctionType() const;
        void setFunctionType(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOperator() const;
        void setOperator(utility::string_t value);
    /// <summary>
    /// string (numeric)
    /// </summary>
    utility::string_t getValue() const;
        void setValue(utility::string_t value);

protected:
    utility::string_t m_NetworkAttributeName;
        utility::string_t m_FunctionType;
        utility::string_t m__operator;
        utility::string_t m_Value;
    };

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Propagator_H_ */
